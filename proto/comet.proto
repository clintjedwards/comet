syntax = "proto3";

package proto;

// Node represents a single comet instance (vm/container/etc)
message Node {
  // id is the unique identifier for a node in comet
  string id = 1;
  // instance_id is the unique identifier for the particular backend being used
  // For example if this was AWS the instance_id would be the resource id
  string instance_id = 2;
  // Comet human readable name
  string name = 3;
  string notes = 4;
  // type refers to the backend specific type of instance. For example (AWS):
  // m5.4xlarge
  string type = 5;
  // DNS is the dns address of this specific node
  string dns = 6;
  // Time created in epoch
  int64 created = 7;
  // Time modified in epoch
  int64 modified = 8;
  // Time of expected comet deletion in epoch
  int64 deletion = 9;
  // owners refers to the human readable names of teams/users who are allowed to
  // manage the asset useful for authorization
  repeated string owners = 10;
  // metadata is a key/value store for extra data that apps might want to store
  // per comet
  map<string, string> metadata = 11;
}

service Comet {
  // Comet routes
  rpc CreateComet(CreateCometRequest) returns (CreateCometResponse);
  rpc DeleteComet(DeleteCometRequest) returns (DeleteCometResponse);
  rpc ExtendComet(ExtendCometRequest) returns (ExtendCometResponse);
  rpc GetComet(GetCometRequest) returns (GetCometResponse);
  rpc ListComets(ListCometsRequest) returns (ListCometsResponse);
  rpc SearchComets(SearchCometsRequest) returns (SearchCometsResponse);
  rpc StartComet(StartCometRequest) returns (StartCometResponse);
  rpc StopComet(StopCometRequest) returns (StopCometResponse);
  rpc UpdateComet(UpdateCometRequest) returns (UpdateCometResponse);
}

message CreateCometRequest {}
message CreateCometResponse {}

message DeleteCometRequest {}
message DeleteCometResponse {}

message ExtendCometRequest {}
message ExtendCometResponse {}

message GetCometRequest {}
message GetCometResponse {}

message ListCometsRequest {}
message ListCometsResponse {}

message SearchCometsRequest {}
message SearchCometsResponse {}

message StartCometRequest {}
message StartCometResponse {}

message StopCometRequest {}
message StopCometResponse {}

message UpdateCometRequest {}
message UpdateCometResponse {}
